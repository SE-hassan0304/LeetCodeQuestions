https://leetcode.com/problems/median-of-two-sorted-arrays/
Given two sorted arrays nums1 and nums2 of size m and n respectively, return the median of the two sorted arrays.
The overall run time complexity should be O(log (m+n)).

Example 1:
Input: nums1 = [1,3], nums2 = [2]
Output: 2.00000
Explanation: merged array = [1,2,3] and median is 2.

Example 2:
Input: nums1 = [1,2], nums2 = [3,4]
Output: 2.50000
Explanation: merged array = [1,2,3,4] and median is (2 + 3) / 2 = 2.5.

class Solution {
public:
    double findMedianSortedArrays(vector<int>& nums1, vector<int>& nums2) {
        //merge the second array in first array
        for(int i : nums2) {
            nums1.push_back(i);
        }
        //sort the merged array
        sort(nums1.begin(), nums1.end());
        int n = nums1.size();
        if(n % 2 != 0) return nums1[n / 2];//If size is odd then n / 2 will ne answer.
        else {
            return ((nums1[n / 2 - 1]) + (nums1[n / 2])) / 2.0;
            //if size is even then it will like - ...
        }
    }
};
